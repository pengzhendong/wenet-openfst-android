apply plugin: 'com.android.library'
apply plugin: 'com.ydq.android.gradle.native-aar.export'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
        ndk {
            abiFilters 'arm64-v8a'
        }
    }

    nativeBundleExport {
        headerDir = "${project.projectDir}/libs/include"
        bundleStatic = true
        extraStaticLibDir = "${project.projectDir}/libs"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.10.2'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

// rename release AAR to unified name
task renameAAR(type: Copy) {
    from('build/outputs/aar/')
    into('build/outputs/aar/')
    include("*-static-*.aar")
    rename { String fileName ->
        fileName.replace("app-static", "app")
    }
}

afterEvaluate {
    bundleStaticLibRelease.finalizedBy(renameAAR)
}
